// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using portfolio_backend.data;

namespace portfolio_backend.Migrations
{
    [DbContext(typeof(PortfolioContext))]
    partial class PortfolioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("portfolio_backend.models.Experience", b =>
                {
                    b.Property<int>("experienceid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("bullet1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("bullet2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("positiontitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("timeperiod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("experienceid");

                    b.HasIndex("userid");

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("portfolio_backend.models.Identifier", b =>
                {
                    b.Property<int>("identifierid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("identifiername")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("identifierid");

                    b.HasIndex("userid");

                    b.ToTable("Identifier");
                });

            modelBuilder.Entity("portfolio_backend.models.Project", b =>
                {
                    b.Property<int>("projectid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imglink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("medialink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mediaorientation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projecttitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projecturl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("userid")
                        .HasColumnType("int");

                    b.HasKey("projectid");

                    b.HasIndex("userid");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("portfolio_backend.models.User", b =>
                {
                    b.Property<int>("userid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("aboutcasualnormal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aboutlight")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aboutnormal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aboutprofilepicdesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("altportfoliolink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactemail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactemaillink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactgithublink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactinstagramlink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactlinkedinlink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contactvscolink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("homeexperienceintro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("homehellointro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("homeintro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("homeprofilepiclink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maintitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numskilllogos")
                        .HasColumnType("int");

                    b.Property<string>("projectsheadline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("projectsintro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resumeiframeresourceurl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resumeiframesrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userid");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("portfolio_backend.models.Experience", b =>
                {
                    b.HasOne("portfolio_backend.models.User", null)
                        .WithMany("experiences")
                        .HasForeignKey("userid");
                });

            modelBuilder.Entity("portfolio_backend.models.Identifier", b =>
                {
                    b.HasOne("portfolio_backend.models.User", null)
                        .WithMany("identifiers")
                        .HasForeignKey("userid");
                });

            modelBuilder.Entity("portfolio_backend.models.Project", b =>
                {
                    b.HasOne("portfolio_backend.models.User", null)
                        .WithMany("projects")
                        .HasForeignKey("userid");
                });

            modelBuilder.Entity("portfolio_backend.models.User", b =>
                {
                    b.Navigation("experiences");

                    b.Navigation("identifiers");

                    b.Navigation("projects");
                });
#pragma warning restore 612, 618
        }
    }
}
